!function(I){function C(g){if(Q[g])return Q[g].exports;var F=Q[g]={i:g,l:!1,exports:{}};return I[g].call(F.exports,F,F.exports,C),F.l=!0,F.exports}var Q={};C.m=I,C.c=Q,C.d=function(I,Q,g){C.o(I,Q)||Object.defineProperty(I,Q,{configurable:!1,enumerable:!0,get:g})},C.n=function(I){var Q=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(Q,"a",Q),Q},C.o=function(I,C){return Object.prototype.hasOwnProperty.call(I,C)},C.p="",C(C.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\n\n__webpack_require__(1);\n\n__webpack_require__(2);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvaW5kZXguanM/Njc1MCJdLCJuYW1lcyI6WyJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBLG1CQUFBQSxDQUFRLENBQVI7O0FBRUEsbUJBQUFBLENBQVEsQ0FBUiIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9hc3NldHMvc2Nzcy9zdHlsZXMuc2NzcycpO1xyXG5cclxucmVxdWlyZSgnLi9qcy9zY3JpcHQnKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvaW5kZXguanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n")},function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL3Njc3Mvc3R5bGVzLnNjc3M/OWE0NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3Jlc291cmNlcy9hc3NldHMvc2Nzcy9zdHlsZXMuc2Nzc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nwindow.DSI_Helpers = {\n    UploadImageHandler: function UploadImageHandler(Upload) {\n        this.uploader = {};\n        this.upload = function (file, errFiles) {\n            var $this = this;\n            $this.errorMsg = {};\n            $this.uploader.f = file;\n            $this.uploader.errFile = errFiles && errFiles[0];\n            if (file) {\n                file.upload = Upload.upload({\n                    url: SITE_RELATIVE_PATH + '/temp-gallery.json',\n                    data: { file: file }\n                });\n\n                file.upload.then(function (response) {\n                    console.log(response.data);\n                    file.result = response.data;\n                    if (response.data.code === 'ok') $this.image = response.data.imgPath;else if (response.data.code === 'error') $this.errorMsg = response.data.errors;\n\n                    $this.uploader = {};\n                }, function (response) {\n                    if (response.status > 0) $this.errorMsg = response.status + ': ' + response.data;\n                }, function (evt) {\n                    file.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\n                });\n            }\n        };\n    },\n\n    TinyMCEImageUpload: function TinyMCEImageUpload(uploadData) {\n        uploadData.element.unbind('change').change(function () {\n            var formData = new FormData();\n            formData.append('upload', true);\n            formData.append('file', $(this)[0].files[0]);\n\n            $.ajax({\n                url: uploadData.uploadUrl,\n                type: 'POST',\n                data: formData,\n                dataType: 'json',\n                processData: false, // tell jQuery not to process the data\n                contentType: false, // tell jQuery not to set contentType\n                success: function success(data) {\n                    uploadData.callback(data.location, {\n                        alt: data.name,\n                        width: data.width,\n                        height: data.height\n                    });\n                }\n            });\n            $(this)[0].value = '';\n        }).click();\n    }\n};\n\n(function readjustTextarea() {\n    function textAreaAdjust(o) {\n        o.style.height = \"1px\";\n        o.style.height = 25 + o.scrollHeight + \"px\";\n    }\n\n    $('.readjustTextarea').each(function () {\n        textAreaAdjust($(this).get(0));\n        $(this).on('keydown', function () {\n            textAreaAdjust($(this).get(0));\n        });\n    });\n\n    // close user menu popup when clicking outside\n    $(\"body\").click(function () {\n        $(\".profile-popover.bg-blur\").hide();\n    });\n    // Prevent events from getting pass .popup\n    $(\"#userMenu\").click(function (e) {\n        e.stopPropagation();\n    });\n})();\n\n(function cookiePolicy() {\n    function setCookie(cname, cvalue, exdays) {\n        var d = new Date();\n        d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n        var expires = \"expires=\" + d.toUTCString();\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n    }\n\n    function getCookie(cname) {\n        var name = cname + \"=\";\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var ca = decodedCookie.split(';');\n        for (var i = 0; i < ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return \"\";\n    }\n\n    if (!getCookie('cookies-agree')) {\n        var container = $('#cookies');\n        container.show();\n\n        $('.js-cookie-accept', container).click(function (ev) {\n            ev.preventDefault();\n            setCookie('cookies-agree', true, 720);\n            container.hide('slow');\n            return false;\n        });\n    }\n\n    if (!getCookie('twitter-dismiss')) {\n        var _container = $('.twitter-block');\n        _container.show();\n        $('body').addClass('padded-footer');\n\n        $('.js-twitter-dismiss', _container).click(function (ev) {\n            ev.preventDefault();\n            setCookie('twitter-dismiss', true, 720);\n            _container.hide('slow');\n            return false;\n        });\n    }\n})();\n\n(function createProjectOrOrganisation() {\n    $('.ix-create-project-modal').click(function () {\n        swal({\n            title: 'Create new project',\n            text: 'Please note that Please note that Please note that Please note that Please note that Please note that Please note that Please note that ',\n            type: \"info\",\n            confirmButtonText: 'Continue',\n            showCancelButton: true,\n            cancelButtonText: 'Cancel'\n        }, function () {\n            $('#ix-create-project-modal').click();\n        });\n    });\n\n    $('.ix-create-organisation-modal').click(function () {\n        swal({\n            title: 'Create new organisation',\n            text: 'Please note that Please note that Please note that Please note that Please note that Please note that Please note that Please note that ',\n            type: \"info\",\n            confirmButtonText: 'Continue',\n            showCancelButton: true,\n            cancelButtonText: 'Cancel'\n        }, function () {\n            $('#ix-create-organisation-modal').click();\n        });\n    });\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")}]);